[
  {
    "name": "DataGridComponent#checkValidity",
    "filePath": "src/components/datagrid/DataGrid.js",
    "lines": [
      {
        "lineNumber": 406,
        "line": "  /**\r"
      },
      {
        "lineNumber": 407,
        "line": "   * Checks the validity of this datagrid.\r"
      },
      {
        "lineNumber": 408,
        "line": "   *\r"
      },
      {
        "lineNumber": 409,
        "line": "   * @param data\r"
      },
      {
        "lineNumber": 410,
        "line": "   * @param dirty\r"
      },
      {
        "lineNumber": 411,
        "line": "   * @return {*}\r"
      },
      {
        "lineNumber": 412,
        "line": "   */\r"
      },
      {
        "lineNumber": 413,
        "line": "  checkValidity(data, dirty, row, silentCheck) {\r"
      }
    ],
    "codeParams": [
      "data",
      "dirty",
      "row",
      "silentCheck"
    ],
    "docParams": [
      "data",
      "dirty"
    ]
  },
  {
    "name": "SelectComponent#addOption",
    "filePath": "src/components/select/Select.js",
    "lines": [
      {
        "lineNumber": 602,
        "line": "  /**"
      },
      {
        "lineNumber": 603,
        "line": "   * Sets the JSON schema for the form to be rendered."
      },
      {
        "lineNumber": 604,
        "line": "   *"
      },
      {
        "lineNumber": 605,
        "line": "   * @example"
      },
      {
        "lineNumber": 606,
        "line": "   * import Webform from 'formiojs/Webform';"
      },
      {
        "lineNumber": 607,
        "line": "   * let form = new Webform(document.getElementById('formio'));"
      },
      {
        "lineNumber": 608,
        "line": "   * form.setForm({"
      },
      {
        "lineNumber": 609,
        "line": "   *   components: ["
      },
      {
        "lineNumber": 610,
        "line": "   *     {"
      },
      {
        "lineNumber": 611,
        "line": "   *       type: 'textfield',"
      },
      {
        "lineNumber": 612,
        "line": "   *       key: 'firstName',"
      },
      {
        "lineNumber": 613,
        "line": "   *       label: 'First Name',"
      },
      {
        "lineNumber": 614,
        "line": "   *       placeholder: 'Enter your first name.',"
      },
      {
        "lineNumber": 615,
        "line": "   *       input: true"
      },
      {
        "lineNumber": 616,
        "line": "   *     },"
      },
      {
        "lineNumber": 617,
        "line": "   *     {"
      },
      {
        "lineNumber": 618,
        "line": "   *       type: 'textfield',"
      },
      {
        "lineNumber": 619,
        "line": "   *       key: 'lastName',"
      },
      {
        "lineNumber": 620,
        "line": "   *       label: 'Last Name',"
      },
      {
        "lineNumber": 621,
        "line": "   *       placeholder: 'Enter your last name',"
      },
      {
        "lineNumber": 622,
        "line": "   *       input: true"
      },
      {
        "lineNumber": 623,
        "line": "   *     },"
      },
      {
        "lineNumber": 624,
        "line": "   *     {"
      },
      {
        "lineNumber": 625,
        "line": "   *       type: 'button',"
      },
      {
        "lineNumber": 626,
        "line": "   *       action: 'submit',"
      },
      {
        "lineNumber": 627,
        "line": "   *       label: 'Submit',"
      },
      {
        "lineNumber": 628,
        "line": "   *       theme: 'primary'"
      },
      {
        "lineNumber": 629,
        "line": "   *     }"
      },
      {
        "lineNumber": 630,
        "line": "   *   ]"
      },
      {
        "lineNumber": 631,
        "line": "   * });"
      },
      {
        "lineNumber": 632,
        "line": "   *"
      },
      {
        "lineNumber": 633,
        "line": "   * @param {Object} form - The JSON schema of the form @see https://examples.form.io/example for an example JSON schema."
      },
      {
        "lineNumber": 634,
        "line": "   * @returns {*}"
      },
      {
        "lineNumber": 635,
        "line": "   */"
      },
      {
        "lineNumber": 636,
        "line": "  setForm(form, flags) {"
      }
    ],
    "codeParams": [
      "text",
      "params",
      "args"
    ],
    "docParams": [
      "text",
      "params"
    ]
  },
  {
    "name": "Component#sanitize",
    "filePath": "src/components/_classes/component/Component.js",
    "lines": [
      {
        "lineNumber": 814,
        "line": "  /**"
      },
      {
        "lineNumber": 815,
        "line": "   * Restores a draft submission based on the user who is authenticated."
      },
      {
        "lineNumber": 816,
        "line": "   *"
      },
      {
        "lineNumber": 817,
        "line": "   * @param {userId} - The user id where we need to restore the draft from."
      },
      {
        "lineNumber": 818,
        "line": "   */"
      },
      {
        "lineNumber": 819,
        "line": "  restoreDraft(userId) {"
      }
    ],
    "codeParams": [
      "dirty"
    ],
    "docParams": [
      "string"
    ]
  },
  {
    "name": "Component#renderString",
    "filePath": "src/components/_classes/component/Component.js",
    "lines": [
      {
        "lineNumber": 1136,
        "line": "  /* eslint-disable no-unused-vars */"
      },
      {
        "lineNumber": 1137,
        "line": "  showErrors(error, triggerEvent, onChange) {"
      }
    ],
    "codeParams": [
      "error",
      "triggerEvent",
      "onChange"
    ],
    "docParams": [
      "error"
    ]
  },
  {
    "name": "Webform#onChange",
    "filePath": "src/Webform.js",
    "lines": [
      {
        "lineNumber": 1282,
        "line": "  /**"
      },
      {
        "lineNumber": 1283,
        "line": "   * Trigger the change event for this form."
      },
      {
        "lineNumber": 1284,
        "line": "   *"
      },
      {
        "lineNumber": 1285,
        "line": "   * @param changed"
      },
      {
        "lineNumber": 1286,
        "line": "   * @param flags"
      },
      {
        "lineNumber": 1287,
        "line": "   */"
      },
      {
        "lineNumber": 1288,
        "line": "  onChange(flags, changed, modified, changes) {"
      }
    ],
    "codeParams": [
      "template",
      "data"
    ],
    "docParams": [
      "template",
      "data",
      "actions"
    ]
  },
  {
    "name": "Component#getWidgetValueAsString",
    "filePath": "src/components/_classes/component/Component.js",
    "lines": [
      {
        "lineNumber": 1474,
        "line": "  /**"
      },
      {
        "lineNumber": 1475,
        "line": "   * Submits the form."
      },
      {
        "lineNumber": 1476,
        "line": "   *"
      },
      {
        "lineNumber": 1477,
        "line": "   * @example"
      },
      {
        "lineNumber": 1478,
        "line": "   * import Webform from 'formiojs/Webform';"
      },
      {
        "lineNumber": 1479,
        "line": "   * let form = new Webform(document.getElementById('formio'));"
      },
      {
        "lineNumber": 1480,
        "line": "   * form.src = 'https://examples.form.io/example';"
      },
      {
        "lineNumber": 1481,
        "line": "   * form.submission = {data: {"
      },
      {
        "lineNumber": 1482,
        "line": "   *   firstName: 'Joe',"
      },
      {
        "lineNumber": 1483,
        "line": "   *   lastName: 'Smith',"
      },
      {
        "lineNumber": 1484,
        "line": "   *   email: 'joe@example.com'"
      },
      {
        "lineNumber": 1485,
        "line": "   * }};"
      },
      {
        "lineNumber": 1486,
        "line": "   * form.submit().then((submission) => {"
      },
      {
        "lineNumber": 1487,
        "line": "   *   console.log(submission);"
      },
      {
        "lineNumber": 1488,
        "line": "   * });"
      },
      {
        "lineNumber": 1489,
        "line": "   *"
      },
      {
        "lineNumber": 1490,
        "line": "   * @param {boolean} before - If this submission occured from the before handlers."
      },
      {
        "lineNumber": 1491,
        "line": "   *"
      },
      {
        "lineNumber": 1492,
        "line": "   * @returns {Promise} - A promise when the form is done submitting."
      },
      {
        "lineNumber": 1493,
        "line": "   */"
      },
      {
        "lineNumber": 1494,
        "line": "  submit(before, options) {"
      }
    ],
    "codeParams": [
      "data",
      "row"
    ],
    "docParams": [
      "data"
    ]
  },
  {
    "name": "Component#checkConditions",
    "filePath": "src/components/_classes/component/Component.js",
    "lines": [
      {
        "lineNumber": 1586,
        "line": "  /**\r"
      },
      {
        "lineNumber": 1587,
        "line": "   * Checks conditions for this component and any sub components.\r"
      },
      {
        "lineNumber": 1588,
        "line": "   * @param args\r"
      },
      {
        "lineNumber": 1589,
        "line": "   * @return {boolean}\r"
      },
      {
        "lineNumber": 1590,
        "line": "   */\r"
      },
      {
        "lineNumber": 1591,
        "line": "  checkConditions(data, flags, row) {\r"
      }
    ],
    "codeParams": [
      "data",
      "flags",
      "row"
    ],
    "docParams": [
      "args"
    ]
  },
  {
    "name": "Component#fieldLogic",
    "filePath": "src/components/_classes/component/Component.js",
    "lines": [
      {
        "lineNumber": 1602,
        "line": "  /**\r"
      },
      {
        "lineNumber": 1603,
        "line": "   * Check all triggers and apply necessary actions.\r"
      },
      {
        "lineNumber": 1604,
        "line": "   *\r"
      },
      {
        "lineNumber": 1605,
        "line": "   * @param data\r"
      },
      {
        "lineNumber": 1606,
        "line": "   */\r"
      },
      {
        "lineNumber": 1607,
        "line": "  fieldLogic(data, row) {\r"
      }
    ],
    "codeParams": [
      "data",
      "row"
    ],
    "docParams": [
      "data"
    ]
  },
  {
    "name": "Component#addMessages",
    "filePath": "src/components/_classes/component/Component.js",
    "lines": [
      {
        "lineNumber": 1749,
        "line": "  /**\r"
      },
      {
        "lineNumber": 1750,
        "line": "   * Add a new input error to this element.\r"
      },
      {
        "lineNumber": 1751,
        "line": "   *\r"
      },
      {
        "lineNumber": 1752,
        "line": "   * @param message\r"
      },
      {
        "lineNumber": 1753,
        "line": "   * @param dirty\r"
      },
      {
        "lineNumber": 1754,
        "line": "   */\r"
      },
      {
        "lineNumber": 1755,
        "line": "  addMessages(messages) {\r"
      }
    ],
    "codeParams": [
      "messages"
    ],
    "docParams": [
      "message",
      "dirty"
    ]
  },
  {
    "name": "Component#setValueAt",
    "filePath": "src/components/_classes/component/Component.js",
    "lines": [
      {
        "lineNumber": 2221,
        "line": "  /**\r"
      },
      {
        "lineNumber": 2222,
        "line": "   * Set the value at a specific index.\r"
      },
      {
        "lineNumber": 2223,
        "line": "   *\r"
      },
      {
        "lineNumber": 2224,
        "line": "   * @param index\r"
      },
      {
        "lineNumber": 2225,
        "line": "   * @param value\r"
      },
      {
        "lineNumber": 2226,
        "line": "   */\r"
      },
      {
        "lineNumber": 2227,
        "line": "  setValueAt(index, value, flags = {}) {\r"
      }
    ],
    "codeParams": [
      "index",
      "value",
      "flags"
    ],
    "docParams": [
      "index",
      "value"
    ]
  },
  {
    "name": "Component#updateComponentValue",
    "filePath": "src/components/_classes/component/Component.js",
    "lines": [
      {
        "lineNumber": 2283,
        "line": "  /**\r"
      },
      {
        "lineNumber": 2284,
        "line": "   * Update a value of this component.\r"
      },
      {
        "lineNumber": 2285,
        "line": "   *\r"
      },
      {
        "lineNumber": 2286,
        "line": "   * @param flags\r"
      },
      {
        "lineNumber": 2287,
        "line": "   */\r"
      },
      {
        "lineNumber": 2288,
        "line": "  updateComponentValue(value, flags = {}) {\r"
      }
    ],
    "codeParams": [
      "value",
      "flags"
    ],
    "docParams": [
      "flags"
    ]
  },
  {
    "name": "Component#updateOnChange",
    "filePath": "src/components/_classes/component/Component.js",
    "lines": [
      {
        "lineNumber": 2359,
        "line": "  /**\r"
      },
      {
        "lineNumber": 2360,
        "line": "   * Update the value on change.\r"
      },
      {
        "lineNumber": 2361,
        "line": "   *\r"
      },
      {
        "lineNumber": 2362,
        "line": "   * @param flags\r"
      },
      {
        "lineNumber": 2363,
        "line": "   */\r"
      },
      {
        "lineNumber": 2364,
        "line": "  updateOnChange(flags = {}, changed = false) {\r"
      }
    ],
    "codeParams": [
      "flags",
      "changed"
    ],
    "docParams": [
      "flags"
    ]
  },
  {
    "name": "Component#convertNumberOrBoolToString",
    "filePath": "src/components/_classes/component/Component.js",
    "lines": [
      {
        "lineNumber": 2372,
        "line": "  /**\r"
      },
      {
        "lineNumber": 2373,
        "line": "   * Perform a calculated value operation.\r"
      },
      {
        "lineNumber": 2374,
        "line": "   *\r"
      },
      {
        "lineNumber": 2375,
        "line": "   * @param data - The global data object.\r"
      },
      {
        "lineNumber": 2376,
        "line": "   *\r"
      },
      {
        "lineNumber": 2377,
        "line": "   * @return {boolean} - If the value changed during calculation.\r"
      },
      {
        "lineNumber": 2378,
        "line": "   */\r"
      },
      {
        "lineNumber": 2379,
        "line": "\r"
      },
      {
        "lineNumber": 2380,
        "line": "  convertNumberOrBoolToString(value) {\r"
      }
    ],
    "codeParams": [
      "value"
    ],
    "docParams": [
      "data"
    ]
  },
  {
    "name": "Component#calculateValue",
    "filePath": "src/components/_classes/component/Component.js",
    "lines": [
      {
        "lineNumber": 2469,
        "line": "  /**\r"
      },
      {
        "lineNumber": 2470,
        "line": "   * Performs calculations in this component plus any child components.\r"
      },
      {
        "lineNumber": 2471,
        "line": "   *\r"
      },
      {
        "lineNumber": 2472,
        "line": "   * @param args\r"
      },
      {
        "lineNumber": 2473,
        "line": "   * @return {boolean}\r"
      },
      {
        "lineNumber": 2474,
        "line": "   */\r"
      },
      {
        "lineNumber": 2475,
        "line": "  calculateValue(data, flags, row) {\r"
      }
    ],
    "codeParams": [
      "data",
      "flags",
      "row"
    ],
    "docParams": [
      "args"
    ]
  },
  {
    "name": "Component#invalidMessage",
    "filePath": "src/components/_classes/component/Component.js",
    "lines": [
      {
        "lineNumber": 2510,
        "line": "  /**\r"
      },
      {
        "lineNumber": 2511,
        "line": "   * Returns the invalid message, or empty string if the component is valid.\r"
      },
      {
        "lineNumber": 2512,
        "line": "   *\r"
      },
      {
        "lineNumber": 2513,
        "line": "   * @param data\r"
      },
      {
        "lineNumber": 2514,
        "line": "   * @param dirty\r"
      },
      {
        "lineNumber": 2515,
        "line": "   * @return {*}\r"
      },
      {
        "lineNumber": 2516,
        "line": "   */\r"
      },
      {
        "lineNumber": 2517,
        "line": "  invalidMessage(data, dirty, ignoreCondition, row) {\r"
      }
    ],
    "codeParams": [
      "data",
      "dirty",
      "ignoreCondition",
      "row"
    ],
    "docParams": [
      "data",
      "dirty"
    ]
  },
  {
    "name": "Component#checkComponentValidity",
    "filePath": "src/components/_classes/component/Component.js",
    "lines": [
      {
        "lineNumber": 2558,
        "line": "  /**\r"
      },
      {
        "lineNumber": 2559,
        "line": "   * Checks the validity of this component and sets the error message if it is invalid.\r"
      },
      {
        "lineNumber": 2560,
        "line": "   *\r"
      },
      {
        "lineNumber": 2561,
        "line": "   * @param data\r"
      },
      {
        "lineNumber": 2562,
        "line": "   * @param dirty\r"
      },
      {
        "lineNumber": 2563,
        "line": "   * @param row\r"
      },
      {
        "lineNumber": 2564,
        "line": "   * @return {boolean}\r"
      },
      {
        "lineNumber": 2565,
        "line": "   */\r"
      },
      {
        "lineNumber": 2566,
        "line": "  checkComponentValidity(data, dirty, row, options = {}) {\r"
      }
    ],
    "codeParams": [
      "data",
      "dirty",
      "row",
      "options"
    ],
    "docParams": [
      "data",
      "dirty",
      "row"
    ]
  },
  {
    "name": "Component#checkData",
    "filePath": "src/components/_classes/component/Component.js",
    "lines": [
      {
        "lineNumber": 2232,
        "line": "  /**"
      },
      {
        "lineNumber": 2233,
        "line": "   * Set the value at a specific index."
      },
      {
        "lineNumber": 2234,
        "line": "   *"
      },
      {
        "lineNumber": 2235,
        "line": "   * @param index"
      },
      {
        "lineNumber": 2236,
        "line": "   * @param value"
      },
      {
        "lineNumber": 2237,
        "line": "   */"
      },
      {
        "lineNumber": 2238,
        "line": "  setValueAt(index, value, flags = {}) {"
      }
    ],
    "codeParams": [
      "data",
      "flags",
      "row"
    ],
    "docParams": [
      "data",
      "flags"
    ]
  },
  {
    "name": "NestedComponent#everyComponent",
    "filePath": "src/components/_classes/nested/NestedComponent.js",
    "lines": [
      {
        "lineNumber": 2294,
        "line": "  /**"
      },
      {
        "lineNumber": 2295,
        "line": "   * Update a value of this component."
      },
      {
        "lineNumber": 2296,
        "line": "   *"
      },
      {
        "lineNumber": 2297,
        "line": "   * @param flags"
      },
      {
        "lineNumber": 2298,
        "line": "   */"
      },
      {
        "lineNumber": 2299,
        "line": "  updateComponentValue(value, flags = {}) {"
      }
    ],
    "codeParams": [
      "fn",
      "options"
    ],
    "docParams": [
      "fn"
    ]
  },
  {
    "name": "NestedComponent#getComponent",
    "filePath": "src/components/_classes/nested/NestedComponent.js",
    "lines": [
      {
        "lineNumber": 2370,
        "line": "  /**"
      },
      {
        "lineNumber": 2371,
        "line": "   * Update the value on change."
      },
      {
        "lineNumber": 2372,
        "line": "   *"
      },
      {
        "lineNumber": 2373,
        "line": "   * @param flags"
      },
      {
        "lineNumber": 2374,
        "line": "   */"
      },
      {
        "lineNumber": 2375,
        "line": "  updateOnChange(flags = {}, changed = false) {"
      }
    ],
    "codeParams": [
      "path",
      "fn",
      "originalPath"
    ],
    "docParams": [
      "key",
      "fn"
    ]
  },
  {
    "name": "NestedComponent#createComponent",
    "filePath": "src/components/_classes/nested/NestedComponent.js",
    "lines": [
      {
        "lineNumber": 2383,
        "line": "  /**"
      },
      {
        "lineNumber": 2384,
        "line": "   * Perform a calculated value operation."
      },
      {
        "lineNumber": 2385,
        "line": "   *"
      },
      {
        "lineNumber": 2386,
        "line": "   * @param data - The global data object."
      },
      {
        "lineNumber": 2387,
        "line": "   *"
      },
      {
        "lineNumber": 2388,
        "line": "   * @return {boolean} - If the value changed during calculation."
      },
      {
        "lineNumber": 2389,
        "line": "   */"
      },
      {
        "lineNumber": 2390,
        "line": ""
      },
      {
        "lineNumber": 2391,
        "line": "  convertNumberOrBoolToString(value) {"
      }
    ],
    "codeParams": [
      "component",
      "options",
      "data",
      "before"
    ],
    "docParams": [
      "component",
      "data"
    ]
  },
  {
    "name": "NestedComponent#addComponents",
    "filePath": "src/components/_classes/nested/NestedComponent.js",
    "lines": [
      {
        "lineNumber": 2480,
        "line": "  /**"
      },
      {
        "lineNumber": 2481,
        "line": "   * Performs calculations in this component plus any child components."
      },
      {
        "lineNumber": 2482,
        "line": "   *"
      },
      {
        "lineNumber": 2483,
        "line": "   * @param args"
      },
      {
        "lineNumber": 2484,
        "line": "   * @return {boolean}"
      },
      {
        "lineNumber": 2485,
        "line": "   */"
      },
      {
        "lineNumber": 2486,
        "line": "  calculateValue(data, flags, row) {"
      }
    ],
    "codeParams": [
      "data",
      "options"
    ],
    "docParams": [
      "element",
      "data"
    ]
  },
  {
    "name": "NestedComponent#addComponent",
    "filePath": "src/components/_classes/nested/NestedComponent.js",
    "lines": [
      {
        "lineNumber": 2521,
        "line": "  /**"
      },
      {
        "lineNumber": 2522,
        "line": "   * Returns the invalid message, or empty string if the component is valid."
      },
      {
        "lineNumber": 2523,
        "line": "   *"
      },
      {
        "lineNumber": 2524,
        "line": "   * @param data"
      },
      {
        "lineNumber": 2525,
        "line": "   * @param dirty"
      },
      {
        "lineNumber": 2526,
        "line": "   * @return {*}"
      },
      {
        "lineNumber": 2527,
        "line": "   */"
      },
      {
        "lineNumber": 2528,
        "line": "  invalidMessage(data, dirty, ignoreCondition, row) {"
      }
    ],
    "codeParams": [
      "component",
      "data",
      "before",
      "noAdd"
    ],
    "docParams": [
      "component",
      "data",
      "before"
    ]
  },
  {
    "name": "Form#sanitize",
    "filePath": "src/Form.js",
    "lines": [
      {
        "lineNumber": 2569,
        "line": "  /**"
      },
      {
        "lineNumber": 2570,
        "line": "   * Checks the validity of this component and sets the error message if it is invalid."
      },
      {
        "lineNumber": 2571,
        "line": "   *"
      },
      {
        "lineNumber": 2572,
        "line": "   * @param data"
      },
      {
        "lineNumber": 2573,
        "line": "   * @param dirty"
      },
      {
        "lineNumber": 2574,
        "line": "   * @param row"
      },
      {
        "lineNumber": 2575,
        "line": "   * @return {boolean}"
      },
      {
        "lineNumber": 2576,
        "line": "   */"
      },
      {
        "lineNumber": 2577,
        "line": "  checkComponentValidity(data, dirty, row, options = {}) {"
      }
    ],
    "codeParams": [
      "dirty"
    ],
    "docParams": [
      "string"
    ]
  },
  {
    "name": "checkInvalidDate",
    "filePath": "src/utils/calendarUtils.js",
    "lines": [
      {
        "lineNumber": 2603,
        "line": "  /**"
      },
      {
        "lineNumber": 2604,
        "line": "   * Check the conditions, calculations, and validity of a single component and triggers an update if"
      },
      {
        "lineNumber": 2605,
        "line": "   * something changed."
      },
      {
        "lineNumber": 2606,
        "line": "   *"
      },
      {
        "lineNumber": 2607,
        "line": "   * @param data - The root data of the change event."
      },
      {
        "lineNumber": 2608,
        "line": "   * @param flags - The flags from this change event."
      },
      {
        "lineNumber": 2609,
        "line": "   *"
      },
      {
        "lineNumber": 2610,
        "line": "   * @return boolean - If component is valid or not."
      },
      {
        "lineNumber": 2611,
        "line": "   */"
      },
      {
        "lineNumber": 2612,
        "line": "  checkData(data, flags, row) {"
      }
    ],
    "codeParams": [
      "value",
      "format",
      "minDate",
      "maxDate"
    ],
    "docParams": [
      "value",
      "format",
      "maxDate",
      "minDate"
    ]
  },
  {
    "name": "getComponent",
    "filePath": "src/utils/formUtils.js",
    "lines": [
      {
        "lineNumber": 144,
        "line": "  /**"
      },
      {
        "lineNumber": 145,
        "line": "   * Perform a deep iteration over every component, including those"
      },
      {
        "lineNumber": 146,
        "line": "   * within other container based components."
      },
      {
        "lineNumber": 147,
        "line": "   *"
      },
      {
        "lineNumber": 148,
        "line": "   * @param {function} fn - Called for every component."
      },
      {
        "lineNumber": 149,
        "line": "   */"
      },
      {
        "lineNumber": 150,
        "line": "  everyComponent(fn, options) {"
      }
    ],
    "codeParams": [
      "components",
      "key",
      "includeAll"
    ],
    "docParams": [
      "components",
      "key"
    ]
  },
  {
    "name": "findComponent",
    "filePath": "src/utils/formUtils.js",
    "lines": [
      {
        "lineNumber": 201,
        "line": "  /**"
      },
      {
        "lineNumber": 202,
        "line": "   * Returns a component provided a key. This performs a deep search within the"
      },
      {
        "lineNumber": 203,
        "line": "   * component tree."
      },
      {
        "lineNumber": 204,
        "line": "   *"
      },
      {
        "lineNumber": 205,
        "line": "   * @param {string} key - The key of the component to retrieve."
      },
      {
        "lineNumber": 206,
        "line": "   * @param {function} fn - Called with the component once found."
      },
      {
        "lineNumber": 207,
        "line": "   * @return {Object} - The component that is located."
      },
      {
        "lineNumber": 208,
        "line": "   */"
      },
      {
        "lineNumber": 209,
        "line": "  getComponent(path, fn, originalPath) {"
      }
    ],
    "codeParams": [
      "components",
      "key",
      "path",
      "fn"
    ],
    "docParams": [
      "components",
      "key",
      "fn",
      "path"
    ]
  },
  {
    "name": "evaluate",
    "filePath": "src/utils/utils.js",
    "lines": [
      {
        "lineNumber": 287,
        "line": "  /**"
      },
      {
        "lineNumber": 288,
        "line": "   * Create a new component and add it to the components array."
      },
      {
        "lineNumber": 289,
        "line": "   *"
      },
      {
        "lineNumber": 290,
        "line": "   * @param component"
      },
      {
        "lineNumber": 291,
        "line": "   * @param data"
      },
      {
        "lineNumber": 292,
        "line": "   */"
      },
      {
        "lineNumber": 293,
        "line": "  createComponent(component, options, data, before) {"
      }
    ],
    "codeParams": [
      "func",
      "args",
      "ret",
      "tokenize"
    ],
    "docParams": [
      "func",
      "args"
    ]
  },
  {
    "name": "checkCalculated",
    "filePath": "src/utils/utils.js",
    "lines": [
      {
        "lineNumber": 354,
        "line": "  /**"
      },
      {
        "lineNumber": 355,
        "line": "   *"
      },
      {
        "lineNumber": 356,
        "line": "   * @param element"
      },
      {
        "lineNumber": 357,
        "line": "   * @param data"
      },
      {
        "lineNumber": 358,
        "line": "   */"
      },
      {
        "lineNumber": 359,
        "line": "  addComponents(data, options) {"
      }
    ],
    "codeParams": [
      "component",
      "submission",
      "rowData"
    ],
    "docParams": [
      "component",
      "submission",
      "data"
    ]
  },
  {
    "name": "checkSimpleConditional",
    "filePath": "src/utils/utils.js",
    "lines": [
      {
        "lineNumber": 371,
        "line": "  /**"
      },
      {
        "lineNumber": 372,
        "line": "   * Add a new component to the components array."
      },
      {
        "lineNumber": 373,
        "line": "   *"
      },
      {
        "lineNumber": 374,
        "line": "   * @param {Object} component - The component JSON schema to add."
      },
      {
        "lineNumber": 375,
        "line": "   * @param {Object} data - The submission data object to house the data for this component."
      },
      {
        "lineNumber": 376,
        "line": "   * @param {HTMLElement} before - A DOM element to insert this element before."
      },
      {
        "lineNumber": 377,
        "line": "   * @return {Component} - The created component instance."
      },
      {
        "lineNumber": 378,
        "line": "   */"
      },
      {
        "lineNumber": 379,
        "line": "  addComponent(component, data, before, noAdd) {"
      }
    ],
    "codeParams": [
      "component",
      "condition",
      "row",
      "data"
    ],
    "docParams": [
      "condition",
      "condition",
      "row",
      "data"
    ]
  },
  {
    "name": "checkCustomConditional",
    "filePath": "src/utils/utils.js",
    "lines": [
      {
        "lineNumber": 412,
        "line": "  /**"
      },
      {
        "lineNumber": 413,
        "line": "   * Checks the validity of this datagrid."
      },
      {
        "lineNumber": 414,
        "line": "   *"
      },
      {
        "lineNumber": 415,
        "line": "   * @param data"
      },
      {
        "lineNumber": 416,
        "line": "   * @param dirty"
      },
      {
        "lineNumber": 417,
        "line": "   * @return {*}"
      },
      {
        "lineNumber": 418,
        "line": "   */"
      },
      {
        "lineNumber": 419,
        "line": "  checkValidity(data, dirty, row, silentCheck) {"
      }
    ],
    "codeParams": [
      "component",
      "custom",
      "row",
      "data",
      "form",
      "variable",
      "onError",
      "instance"
    ],
    "docParams": [
      "component",
      "custom",
      "row",
      "data"
    ]
  },
  {
    "name": "checkCondition",
    "filePath": "src/utils/utils.js",
    "lines": [
      {
        "lineNumber": 213,
        "line": "  /**"
      },
      {
        "lineNumber": 214,
        "line": "   * Adds an option to the select dropdown."
      },
      {
        "lineNumber": 215,
        "line": "   *"
      },
      {
        "lineNumber": 216,
        "line": "   * @param value"
      },
      {
        "lineNumber": 217,
        "line": "   * @param label"
      },
      {
        "lineNumber": 218,
        "line": "   */"
      },
      {
        "lineNumber": 219,
        "line": "  addOption(value, label, attrs = {}, id) {"
      }
    ],
    "codeParams": [
      "value",
      "label",
      "attrs",
      "id"
    ],
    "docParams": [
      "value",
      "label"
    ]
  },
  {
    "name": "SelectComponent#addCurrentChoices",
    "filePath": "src/components/select/Select.js",
    "lines": [
      {
        "lineNumber": 1082,
        "line": "  /**"
      },
      {
        "lineNumber": 1083,
        "line": "   * @param {*} value"
      },
      {
        "lineNumber": 1084,
        "line": "   * @param {Array} items"
      },
      {
        "lineNumber": 1085,
        "line": "   */"
      },
      {
        "lineNumber": 1086,
        "line": "  addCurrentChoices(values, items, keyValue) {"
      }
    ],
    "codeParams": [
      "component",
      "row",
      "data",
      "form",
      "instance"
    ],
    "docParams": [
      "component",
      "row",
      "data"
    ]
  },
  {
    "name": "checkTrigger",
    "filePath": "src/utils/utils.js",
    "lines": [
      {
        "lineNumber": 294,
        "line": "/**\r"
      },
      {
        "lineNumber": 295,
        "line": " * Test a trigger on a component.\r"
      },
      {
        "lineNumber": 296,
        "line": " *\r"
      },
      {
        "lineNumber": 297,
        "line": " * @param component\r"
      },
      {
        "lineNumber": 298,
        "line": " * @param action\r"
      },
      {
        "lineNumber": 299,
        "line": " * @param data\r"
      },
      {
        "lineNumber": 300,
        "line": " * @param row\r"
      },
      {
        "lineNumber": 301,
        "line": " * @returns {mixed}\r"
      },
      {
        "lineNumber": 302,
        "line": " */\r"
      },
      {
        "lineNumber": 303,
        "line": "export function checkTrigger(component, trigger, row, data, form, instance) {\r"
      }
    ],
    "codeParams": [
      "component",
      "trigger",
      "row",
      "data",
      "form",
      "instance"
    ],
    "docParams": [
      "component",
      "action",
      "data",
      "row"
    ]
  },
  {
    "name": "delay",
    "filePath": "src/utils/utils.js",
    "lines": [
      {
        "lineNumber": 907,
        "line": "/**\r"
      },
      {
        "lineNumber": 908,
        "line": " * Delays function execution with possibility to execute function synchronously or cancel it.\r"
      },
      {
        "lineNumber": 909,
        "line": " *\r"
      },
      {
        "lineNumber": 910,
        "line": " * @param fn Function to delay\r"
      },
      {
        "lineNumber": 911,
        "line": " * @param delay Delay time\r"
      },
      {
        "lineNumber": 912,
        "line": " * @return {*}\r"
      },
      {
        "lineNumber": 913,
        "line": " */\r"
      },
      {
        "lineNumber": 914,
        "line": "export function delay(fn, delay = 0, ...args) {\r"
      }
    ],
    "codeParams": [
      "fn",
      "delay",
      "args"
    ],
    "docParams": [
      "fn",
      "delay"
    ]
  },
  {
    "name": "unfold",
    "filePath": "src/utils/utils.js",
    "lines": [
      {
        "lineNumber": 981,
        "line": "/**\r"
      },
      {
        "lineNumber": 982,
        "line": " * Retrun provided argument.\r"
      },
      {
        "lineNumber": 983,
        "line": " * If argument is a function, returns the result of a function call.\r"
      },
      {
        "lineNumber": 984,
        "line": " * @param {*} e;\r"
      },
      {
        "lineNumber": 985,
        "line": " *\r"
      },
      {
        "lineNumber": 986,
        "line": " * @return {*}\r"
      },
      {
        "lineNumber": 987,
        "line": " */\r"
      },
      {
        "lineNumber": 988,
        "line": "export function unfold(e) {\r"
      }
    ],
    "codeParams": [
      "e"
    ],
    "docParams": [
      "e;"
    ]
  },
  {
    "name": "sanitize",
    "filePath": "src/utils/utils.js",
    "lines": [
      {
        "lineNumber": 1071,
        "line": "/**\r"
      },
      {
        "lineNumber": 1072,
        "line": " * Sanitize an html string.\r"
      },
      {
        "lineNumber": 1073,
        "line": " *\r"
      },
      {
        "lineNumber": 1074,
        "line": " * @param string\r"
      },
      {
        "lineNumber": 1075,
        "line": " * @returns {*}\r"
      },
      {
        "lineNumber": 1076,
        "line": " */\r"
      },
      {
        "lineNumber": 1077,
        "line": "export function sanitize(string, options) {\r"
      }
    ],
    "codeParams": [
      "string",
      "options"
    ],
    "docParams": [
      "string"
    ]
  },
  {
    "name": "ValidationChecker#checkValidations",
    "filePath": "src/validator/Validator.js",
    "lines": [
      {
        "lineNumber": 944,
        "line": "  /**\r"
      },
      {
        "lineNumber": 945,
        "line": "   * Use the new validations engine to evaluate any errors.\r"
      },
      {
        "lineNumber": 946,
        "line": "   *\r"
      },
      {
        "lineNumber": 947,
        "line": "   * @param component\r"
      },
      {
        "lineNumber": 948,
        "line": "   * @param validations\r"
      },
      {
        "lineNumber": 949,
        "line": "   * @param data\r"
      },
      {
        "lineNumber": 950,
        "line": "   * @param row\r"
      },
      {
        "lineNumber": 951,
        "line": "   * @param values\r"
      },
      {
        "lineNumber": 952,
        "line": "   * @returns {any[]}\r"
      },
      {
        "lineNumber": 953,
        "line": "   */\r"
      },
      {
        "lineNumber": 954,
        "line": "  checkValidations(component, validations, data, row, values, async) {\r"
      }
    ],
    "codeParams": [
      "component",
      "validations",
      "data",
      "row",
      "values",
      "async"
    ],
    "docParams": [
      "component",
      "validations",
      "data",
      "row",
      "values"
    ]
  },
  {
    "name": "Webform#setForm",
    "filePath": "src/Webform.js",
    "lines": [
      {
        "lineNumber": 601,
        "line": "  /**\r"
      },
      {
        "lineNumber": 602,
        "line": "   * Sets the JSON schema for the form to be rendered.\r"
      },
      {
        "lineNumber": 603,
        "line": "   *\r"
      },
      {
        "lineNumber": 604,
        "line": "   * @example\r"
      },
      {
        "lineNumber": 605,
        "line": "   * import Webform from 'formiojs/Webform';\r"
      },
      {
        "lineNumber": 606,
        "line": "   * let form = new Webform(document.getElementById('formio'));\r"
      },
      {
        "lineNumber": 607,
        "line": "   * form.setForm({\r"
      },
      {
        "lineNumber": 608,
        "line": "   *   components: [\r"
      },
      {
        "lineNumber": 609,
        "line": "   *     {\r"
      },
      {
        "lineNumber": 610,
        "line": "   *       type: 'textfield',\r"
      },
      {
        "lineNumber": 611,
        "line": "   *       key: 'firstName',\r"
      },
      {
        "lineNumber": 612,
        "line": "   *       label: 'First Name',\r"
      },
      {
        "lineNumber": 613,
        "line": "   *       placeholder: 'Enter your first name.',\r"
      },
      {
        "lineNumber": 614,
        "line": "   *       input: true\r"
      },
      {
        "lineNumber": 615,
        "line": "   *     },\r"
      },
      {
        "lineNumber": 616,
        "line": "   *     {\r"
      },
      {
        "lineNumber": 617,
        "line": "   *       type: 'textfield',\r"
      },
      {
        "lineNumber": 618,
        "line": "   *       key: 'lastName',\r"
      },
      {
        "lineNumber": 619,
        "line": "   *       label: 'Last Name',\r"
      },
      {
        "lineNumber": 620,
        "line": "   *       placeholder: 'Enter your last name',\r"
      },
      {
        "lineNumber": 621,
        "line": "   *       input: true\r"
      },
      {
        "lineNumber": 622,
        "line": "   *     },\r"
      },
      {
        "lineNumber": 623,
        "line": "   *     {\r"
      },
      {
        "lineNumber": 624,
        "line": "   *       type: 'button',\r"
      },
      {
        "lineNumber": 625,
        "line": "   *       action: 'submit',\r"
      },
      {
        "lineNumber": 626,
        "line": "   *       label: 'Submit',\r"
      },
      {
        "lineNumber": 627,
        "line": "   *       theme: 'primary'\r"
      },
      {
        "lineNumber": 628,
        "line": "   *     }\r"
      },
      {
        "lineNumber": 629,
        "line": "   *   ]\r"
      },
      {
        "lineNumber": 630,
        "line": "   * });\r"
      },
      {
        "lineNumber": 631,
        "line": "   *\r"
      },
      {
        "lineNumber": 632,
        "line": "   * @param {Object} form - The JSON schema of the form @see https://examples.form.io/example for an example JSON schema.\r"
      },
      {
        "lineNumber": 633,
        "line": "   * @returns {*}\r"
      },
      {
        "lineNumber": 634,
        "line": "   */\r"
      },
      {
        "lineNumber": 635,
        "line": "  setForm(form, flags) {\r"
      }
    ],
    "codeParams": [
      "form",
      "flags"
    ],
    "docParams": [
      "form"
    ]
  },
  {
    "name": "Webform#restoreDraft",
    "filePath": "src/Webform.js",
    "lines": [
      {
        "lineNumber": 812,
        "line": "  /**\r"
      },
      {
        "lineNumber": 813,
        "line": "   * Restores a draft submission based on the user who is authenticated.\r"
      },
      {
        "lineNumber": 814,
        "line": "   *\r"
      },
      {
        "lineNumber": 815,
        "line": "   * @param {userId} - The user id where we need to restore the draft from.\r"
      },
      {
        "lineNumber": 816,
        "line": "   */\r"
      },
      {
        "lineNumber": 817,
        "line": "  restoreDraft(userId) {\r"
      }
    ],
    "codeParams": [
      "userId"
    ],
    "docParams": [
      "-"
    ]
  },
  {
    "name": "Webform#showErrors",
    "filePath": "src/Webform.js",
    "lines": [
      {
        "lineNumber": 1134,
        "line": "  /* eslint-disable no-unused-vars */\r"
      },
      {
        "lineNumber": 1135,
        "line": "  showErrors(error, triggerEvent, onChange) {\r"
      }
    ],
    "codeParams": [
      "error",
      "triggerEvent",
      "onChange"
    ],
    "docParams": [
      "error"
    ]
  },
  {
    "name": "Webform#onChange",
    "filePath": "src/Webform.js",
    "lines": [
      {
        "lineNumber": 1280,
        "line": "  /**\r"
      },
      {
        "lineNumber": 1281,
        "line": "   * Trigger the change event for this form.\r"
      },
      {
        "lineNumber": 1282,
        "line": "   *\r"
      },
      {
        "lineNumber": 1283,
        "line": "   * @param changed\r"
      },
      {
        "lineNumber": 1284,
        "line": "   * @param flags\r"
      },
      {
        "lineNumber": 1285,
        "line": "   */\r"
      },
      {
        "lineNumber": 1286,
        "line": "  onChange(flags, changed, modified, changes) {\r"
      }
    ],
    "codeParams": [
      "flags",
      "changed",
      "modified",
      "changes"
    ],
    "docParams": [
      "changed",
      "flags"
    ]
  },
  {
    "name": "Webform#submit",
    "filePath": "src/Webform.js",
    "lines": [
      {
        "lineNumber": 1472,
        "line": "  /**\r"
      },
      {
        "lineNumber": 1473,
        "line": "   * Submits the form.\r"
      },
      {
        "lineNumber": 1474,
        "line": "   *\r"
      },
      {
        "lineNumber": 1475,
        "line": "   * @example\r"
      },
      {
        "lineNumber": 1476,
        "line": "   * import Webform from 'formiojs/Webform';\r"
      },
      {
        "lineNumber": 1477,
        "line": "   * let form = new Webform(document.getElementById('formio'));\r"
      },
      {
        "lineNumber": 1478,
        "line": "   * form.src = 'https://examples.form.io/example';\r"
      },
      {
        "lineNumber": 1479,
        "line": "   * form.submission = {data: {\r"
      },
      {
        "lineNumber": 1480,
        "line": "   *   firstName: 'Joe',\r"
      },
      {
        "lineNumber": 1481,
        "line": "   *   lastName: 'Smith',\r"
      },
      {
        "lineNumber": 1482,
        "line": "   *   email: 'joe@example.com'\r"
      },
      {
        "lineNumber": 1483,
        "line": "   * }};\r"
      },
      {
        "lineNumber": 1484,
        "line": "   * form.submit().then((submission) => {\r"
      },
      {
        "lineNumber": 1485,
        "line": "   *   console.log(submission);\r"
      },
      {
        "lineNumber": 1486,
        "line": "   * });\r"
      },
      {
        "lineNumber": 1487,
        "line": "   *\r"
      },
      {
        "lineNumber": 1488,
        "line": "   * @param {boolean} before - If this submission occured from the before handlers.\r"
      },
      {
        "lineNumber": 1489,
        "line": "   *\r"
      },
      {
        "lineNumber": 1490,
        "line": "   * @returns {Promise} - A promise when the form is done submitting.\r"
      },
      {
        "lineNumber": 1491,
        "line": "   */\r"
      },
      {
        "lineNumber": 1492,
        "line": "  submit(before, options) {\r"
      }
    ],
    "codeParams": [
      "before",
      "options"
    ],
    "docParams": [
      "before"
    ]
  },
  {
    "name": "WebformBuilder#saveComponent",
    "filePath": "src/WebformBuilder.js",
    "lines": [
      {
        "lineNumber": 1037,
        "line": "  /**\r"
      },
      {
        "lineNumber": 1038,
        "line": "   * Called when a new component is saved.\r"
      },
      {
        "lineNumber": 1039,
        "line": "   *\r"
      },
      {
        "lineNumber": 1040,
        "line": "   * @param parent\r"
      },
      {
        "lineNumber": 1041,
        "line": "   * @param component\r"
      },
      {
        "lineNumber": 1042,
        "line": "   * @return {boolean}\r"
      },
      {
        "lineNumber": 1043,
        "line": "   */\r"
      },
      {
        "lineNumber": 1044,
        "line": "  saveComponent(component, parent, isNew, original) {\r"
      }
    ],
    "codeParams": [
      "component",
      "parent",
      "isNew",
      "original"
    ],
    "docParams": [
      "parent",
      "component"
    ]
  }
]